apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "s3-proxy.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "s3-proxy.name" . }}
    helm.sh/chart: {{ include "s3-proxy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "s3-proxy.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "s3-proxy.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "s3-proxy.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: S3PROXY_AUTHORIZATION
            value: "aws-v2-or-v4"
          - name: S3PROXY_IDENTITY
            value: "{{ .Values.s3.identity }}"
          - name: S3PROXY_CREDENTIAL
            valueFrom:
              secretKeyRef:
                name: {{ template "s3-proxy.fullname" . }}
                key: s3Credential
          {{- if .Values.target.endpoint }}
          - name: JCLOUDS_ENDPOINT
            value: {{ .Values.target.endpoint | quote }}
          {{- end }}
          - name: JCLOUDS_PROVIDER
            value: {{ .Values.target.provider | quote }}
          {{- if .Values.target.identity }}
          - name: JCLOUDS_IDENTITY
            value: {{ .Values.target.identity | quote }}
          {{- end }}
          {{- if .Values.target.credential }}
          - name: JCLOUDS_CREDENTIAL
            valueFrom:
              secretKeyRef:
                name: {{ template "s3-proxy.fullname" . }}
                key: targetCredential
          {{- end }}
          {{- if .Values.target.api }}
          - name: JCLOUDS_API
            value: {{ .Values.target.api | quote }}
          {{- end }}
          {{- if eq .Values.target.provider "azureblob" }}
          - name: JCLOUDS_AZUREBLOB_AUTH
            value: {{ .Values.target.azureblob.auth | quote }}
          {{- end }}
          {{- if .Values.target.keystone.version }}
          - name: JCLOUDS_KEYSTONE_VERSION
            value: {{ .Values.target.keystone.version | quote }}
          {{- end }}
          {{- if .Values.target.keystone.credentialType }}
          - name: JCLOUDS_KEYSTONE_CREDENTIAL_TYPE
            value: {{ .Values.target.keystone.credentialType | quote }}
          {{- end }}
          {{- if .Values.target.keystone.scope }}
          - name: JCLOUDS_KEYSTONE_SCOPE
            value: {{ .Values.target.keystone.scope | quote }}
          {{- end }}
          {{- if .Values.target.keystone.projectDomainName }}
          - name: JCLOUDS_KEYSTONE_PROJECT_DOMAIN_NAME
            value: {{ .Values.target.keystone.projectDomainName | quote }}
          {{- end }}
          {{- if eq .Values.target.provider "filesystem" }}
          - name: JCLOUDS_FILESYSTEM_BASEDIR
            value: {{ .Values.target.filesystem.basedir | quote }}
          {{- end }}
          {{- if .Values.target.region }}
          - name: JCLOUDS_REGION
            value: {{ .Values.target.region | quote }}
          {{- end }}
          {{- if .Values.target.regions }}
          - name: JCLOUDS_REGIONS
            value: {{ .Values.target.regions | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
