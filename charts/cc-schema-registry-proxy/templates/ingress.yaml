{{- if .Values.ingress.enabled -}}
{{- $fullName := include "cc-schema-registry-proxy.fullname" . -}}
{{- $path := .Values.ingress.path -}}
{{- $hosts := .Values.ingress.hosts -}}
{{- $svcPort := .Values.service.port -}}
{{- $pathType := .Values.ingress.pathType -}}
{{- $externalName := .Values.service.externalName -}}
{{- $credentials := print .Values.cc.schemaRegistryApiKey ":" .Values.cc.schemaRegistryApiSecret -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
{{ include "cc-schema-registry-proxy.labels" . | indent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      limit_except GET {
        deny all;
      }
      more_set_input_headers "Authorization: Basic {{ $credentials | b64enc }}";
    nginx.ingress.kubernetes.io/upstream-vhost: {{ $externalName }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
      {{- range $hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $path | quote }}
            {{- if and $pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ $pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
  {{- end }}
{{- end }}
