# Default values for radar-jdbc-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of radar-fitbit-connector replicas to deploy
replicaCount: 1

image:
  # -- radar-jdbc-connector image repository
  repository: radarbase/radar-jdbc-connector
  # -- radar-jdbc-connector image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag: 10.3.1
  # -- radar-jdbc-connector image pull policy
  pullPolicy: IfNotPresent

# -- Docker registry secret names as an array
imagePullSecrets: []

# -- String to partially override radar-jdbc-connector.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override radar-jdbc-connector.fullname template with a string
fullnameOverride: ""

# -- Configure radar-jdbc-connector pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure radar-jdbc-connector containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- radar-jdbc-connector port
  port: 8083

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

  # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 1Gi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

environment:
  # -- URI of Kafka brokers of the cluster
  CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://cp-kafka-headless:9092
  # -- URL of the Kafka key converter schema registry
  CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://cp-schema-registry:8081"
  # -- URL of the Kafka value converter schema registry
  CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://cp-schema-registry:8081"
  # -- URI of Zookeeper instances of the cluster
  CONNECT_ZOOKEEPER_CONNECT: "cp-zookeeper-headless:2181"
  # -- Number of Kafka brokers. This is used to validate the cluster availability at connector init.
  KAFKA_BROKERS: "3"
  # -- Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.
  CONNECT_SECURITY_PROTOCOL: PLAINTEXT
  # -- The location of the key store file.
  CONNECT_SSL_KEYSTORE_LOCATION: ""
  # -- The store password for the key store file.
  CONNECT_SSL_KEYSTORE_PASSWORD: ""
  # -- The password of the private key in the key store file.
  CONNECT_SSL_KEY_PASSWORD: ""
  # -- The location of the trust store file.
  CONNECT_SSL_TRUSTSTORE_LOCATION: ""
  # -- The password for the trust store file.
  CONNECT_SSL_TRUSTSTORE_PASSWORD: ""

# -- Comma-separated list of topics the connector will read from and ingest into the database
topics: android_phone_relative_location, android_phone_battery_level, connect_upload_altoida_summary, connect_fitbit_intraday_heart_rate, connect_fitbit_intraday_steps

timescaledb:
  # -- Host of the TimescaleDB database
  host: timescaledb-postgresql-headless
  # -- TimescaleDB database username
  username: grafana
  # -- TimescaleDB database password
  password: password
  # -- TimescaleDB database name
  database_name: grafana-metrics
