{{- if (include "radar-appserver.createSecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  managementPortalClientId: {{ .Values.radar_admin_user | b64enc | quote }}
  managementPortalClientSecret: {{ .Values.radar_admin_password | b64enc | quote }}
  databaseUser: {{ .Values.postgres.user | b64enc | quote }}
  databasePassword: {{ .Values.postgres.password | b64enc | quote }}
  githubClientToken: {{ .Values.github_client_token | b64enc | quote }}
  firebaseAdminSdkKey: {{ .Values.google_application_credentials | b64enc | quote }}
  {{- if and .Values.smtp.enabled .Values.smtp.auth }}
  smtpUsername: {{ .Values.smtp.username | b64enc | quote }}
  smtpPassword: {{ .Values.smtp.password | b64enc | quote }}
  {{- end }}
  {{- if and .Values.upload.enabled (eq .Values.upload.storage.type "s3") }}
  s3AccessKey: {{ .Values.upload.storage.access_key | b64enc | quote }}
  s3SecretKey: {{ .Values.upload.storage.secret_key | b64enc | quote }}
  {{- end }}
{{- end }}
