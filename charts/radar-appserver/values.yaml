# Default values for radar-appserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of radar-appserver replicas to deploy
replicaCount: 2

image:
  # -- radar-appserver image repository
  repository: radarbase/radar-appserver
  # -- radar-appserver image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.1.0
  # -- radar-appserver image pull policy
  pullPolicy: IfNotPresent

# -- Docker registry secret names as an array
imagePullSecrets: []

# -- String to partially override radar-appserver.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override radar-appserver.fullname template with a string
fullnameOverride: ""

# -- Configure radar-appserver pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure radar-appserver containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- radar-appserver port
  port: 8080

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Annotations that define default ingress class, certificate issuer and session configuration
  # @default -- check values.yaml
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  # -- Path within the url structure
  path: "/appserver/?(.*)"
  # -- Hosts to accept requests from
  hosts:
    - localhost
  tls:
    # -- TLS Secret Name
    secretName: radar-base-tls

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

  # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 128Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

# Configuration of the Postgres data base to store data from Appserver
postgres:
  # -- host name of the postgres db
  host: postgresql
  # -- post of the postgres db
  port: 5432
  # -- database name
  database: appserver
  # -- additional JDBC connection parameters e.g. sslmode=verify-full
  connection_parameters: ""
  # -- postgres user
  user: postgres
  # -- password of the postgres user
  password: password
  ssl:
    # -- set to true of the connecting to postgres using SSL
    enabled: false
    keystorepassword: keystorepassword

radar_admin_user: radar
radar_admin_password: radar

# -- hostname of the Management Portal
managementportal_host: management-portal

serverName: localhost

# -- radar_is.yml config for token verification
managementportal_resource_name: res_AppServer
public_key_endpoints:
  # List of Management Portal instance public key endpoints for token verification
  # - https://localhost/managementportal/oauth/token_key

# -- Google credentials containing FCM server key, etc.
google_application_credentials: ""
# With helmfile, this can be set in a production.yaml.gotmpl
# file by setting
#   google_application_credentials: {{ readFile "etc/radar-appserver/google-credentials.json" | quote }}
